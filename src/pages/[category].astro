---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import BlogPost from '../components/BlogPost.astro';

export async function getStaticPaths() {
  const validCategories = [
    'ux-design',
    'music-production',
    'tech',
    'creativity'
  ];

  return validCategories.map(category => ({
    params: { category },
  }));
}

const { category } = Astro.params;
const allPosts = await getCollection('blog');

// Debug logs
console.log('Current category:', category);

const categoryPosts = allPosts.filter(post => {
  console.log('Post data:', post.data);
  return post.data?.category === category;
});

const sortedPosts = categoryPosts.sort((a, b) => 
  new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);


const categoryDetails = {
  'ux-design': {
    title: 'UX Design',
    description: 'Insights and best practices in user experience design.'
  },
  'music-production': {
    title: 'Music Production',
    description: 'Tips, techniques, and stories from music production.'
  },
  'tech': {
    title: 'Technology',
    description: 'Exploring web development, AI, and creative technology.'
  },
  'creativity': {
    title: 'Digital Creativity',
    description: 'Digital art, design tools, and creative workflows.'
  }
}[category];
---

<BaseLayout pageTitle={`${categoryDetails?.title} | Blog`}>
  <main class="py-12 container">
    <section class="mb-16">
      <a href="/blog" class="text-sm text-muted-foreground hover:text-foreground mb-4 inline-block">
        ‚Üê Back to categories
      </a>
      <h1 class="text-4xl font-bold tracking-tight mb-4">
        {categoryDetails?.title}
      </h1>
      <p class="text-xl text-muted-foreground">
        {categoryDetails?.description}
      </p>
    </section>

    <div class="space-y-8">
      {sortedPosts.map(post => (
        <article class="group">
          <a href={`/posts/${post.id}`} class="block space-y-3 hover:bg-secondary/20 p-4 -mx-4 rounded-lg transition-colors">
            <div class="flex items-center gap-4 text-sm text-muted-foreground">
              <time datetime={post.data.pubDate.toISOString()}>
                {new Date(post.data.pubDate).toLocaleDateString('en-US', {
                  month: 'long',
                  day: 'numeric',
                  year: 'numeric'
                })}
              </time>
            </div>
            <h2 class="text-xl font-medium group-hover:text-primary transition-colors">
              {post.data.title}
            </h2>
            <p class="text-muted-foreground line-clamp-2">
              {post.data.description}
            </p>
          </a>
        </article>
      ))}
    </div>
  </main>
</BaseLayout> 